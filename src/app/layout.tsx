import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import React from "react";
import MusicPlayer from "@/components/MusicPlayer";
import fs from "fs";
import path from "path";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // find first .mp3 in public/music (if any)
  let audioSrc: string | undefined = undefined;
  try {
    const musicDir = path.join(process.cwd(), "public", "music");
    const files = fs.readdirSync(musicDir).filter((f) => /\.mp3$/i.test(f));
    if (files.length > 0) audioSrc = `/music/${encodeURIComponent(files[0])}`;
  } catch {
    // no music folder or
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
        {audioSrc && <MusicPlayer audioSrc={audioSrc} />}
      </body>
    </html>
  );
}
